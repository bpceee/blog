{"version":3,"sources":["components/App.module.css","components/PostList.module.css","components/Navbar.module.css","components/DumbPost.js","utils/index.js","components/About.js","components/Navbar.js","components/Post.js","components/PostList.js","components/App.js","index.js"],"names":["module","exports","app","main","footer","list","date","navbar","DumbPost","post","this","props","number","document","title","querySelector","script","createElement","src","setAttribute","concat","process","async","appendChild","utterances","remove","markup","react_default","a","Fragment","className","dangerouslySetInnerHTML","bodyHTML","__html","React","Component","About","react_apollo_browser_umd","query","gql","_templateObject","_ref","loading","error","data","repository","issues","edges","node","components_DumbPost","Navbar","styles","NavLink","exact","to","Post","match","Post_templateObject","params","id","_ref2","issue","PostDate","dateString","elemProps","Object","objectWithoutProperties","splits","Date","toString","substring","split","unshift","splice","transformedDataString","join","PostList","PostList_templateObject","map","_ref3","key","PostList_PostDate","createdAt","Link","App","components_Navbar","Switch","Route","path","component","href","rel","target","client","ApolloClient","uri","headers","authorization","ReactDOM","render","BrowserRouter","basename","components_App","getElementById"],"mappings":"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","file":"static/js/main.b2cc7843.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2_Wif\",\"main\":\"App_main__2W2Jk\",\"footer\":\"App_footer__2PXAv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PostList_list__SeGo8\",\"date\":\"PostList_date__STrt0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1fwtz\"};","import React from 'react';\nimport 'github-markdown-css/github-markdown.css'\nimport { createMarkup } from '../utils';\n\nclass DumbPost extends React.Component {\n\n  componentDidMount () {\n    const {post} = this.props;\n    if (!post.number) {\n      return;\n    }\n    document.title = post.title;\n    const main = document.querySelector(\"main\");\n    const script = document.createElement(\"script\");\n    script.src = \"https://utteranc.es/client.js\";\n    script.setAttribute('repo', `${process.env.REACT_APP_USERNAME}/${process.env.REACT_APP_REPO}`);\n    script.setAttribute('issue-number', post.number);\n    script.async = true;\n    main.appendChild(script);\n  }  \n\n  componentWillUnmount() {\n    const utterances = document.querySelector(\".utterances\");\n    utterances && utterances.remove();\n  }\n\n  render() {\n    const {post} = this.props;\n    return (\n      <React.Fragment>\n        <section>\n          <h1>{post.title}</h1>  \n        </section>\n        <article className=\"markdown-body\">\n          <div dangerouslySetInnerHTML={createMarkup(post.bodyHTML)}></div> \n        </article>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DumbPost;","export function createMarkup(markup) {\n  return {__html: markup};\n}","import React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport DumbPost from './DumbPost';\n\nconst About = () => (\n  <Query\n    query={gql`\n      query {\n        repository(owner:\"${process.env.REACT_APP_USERNAME}\", name:\"${process.env.REACT_APP_REPO}\") {\n          issues(last:1, labels:\"about\") {\n            edges {\n              node {\n                title\n                number\n                bodyHTML\n              }\n            }\n          }\n        }\n      }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <span>Loading...</span>;\n      if (error) return <span>Error :(</span>;\n\n      const post = data.repository.issues.edges[0].node || {bodyHTML: `<div>Nothing here!<div>`};\n      // const post = {bodyHTML: `<div>Nothing here!<div>`};\n      return <DumbPost post={post}/>\n    }}\n  </Query>\n)\n\nexport default About;","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport styles from './Navbar.module.css';\n\nconst Navbar = () => (\n  <nav className={styles.navbar}>\n    <NavLink exact to={'/'}> Home </NavLink>\n    <NavLink to={'/about'}> About </NavLink>\n  </nav>  \n)\n\nexport default Navbar;","\nimport React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport DumbPost from './DumbPost';\n\nconst Post = ({ match }) => (\n  <Query\n    query={gql`\n      query {\n        repository(owner:\"${process.env.REACT_APP_USERNAME}\", name:\"${process.env.REACT_APP_REPO}\") {\n          issue(number:${match.params.id}) {\n            number\n            title\n            bodyHTML\n            createdAt\n          }\n        }\n      }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <span>Loading...</span>;\n      if (error) return <span>Not Found :(</span>;\n      return <DumbPost post={data.repository.issue}/>\n    }}\n  </Query>\n)\n\nexport default Post;","\nimport React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"./PostList.module.css\";\n\nconst PostDate = ({dateString, ...elemProps}) => {\n  const splits = new Date(dateString).toString().substring(4, 15).split(' ');\n  splits.unshift(splits.splice(1, 1))\n  const transformedDataString = splits.join(' ');\n  return <span {...elemProps}>{transformedDataString}</span>\n}\n\nclass PostList extends React.Component {\n  \n  componentDidMount () {\n    document.title = process.env.REACT_APP_TITLE;\n  }\n\n  render () {\n    // TODO: add pagination\n    return <Query\n      query={gql`\n        query {\n          repository(owner:\"${process.env.REACT_APP_USERNAME}\", name:\"${process.env.REACT_APP_REPO}\") {\n            issues(last:100, labels:\"post\", orderBy: {field: CREATED_AT, direction: DESC}) {\n              edges {\n                node {\n                  title\n                  number\n                  createdAt\n                }\n              }\n            }\n          }\n        }\n      `}\n    >\n      {({ loading, error, data }) => {\n        if (loading) return <span>Loading...</span>;\n        if (error) return <span>Error :(</span>;\n\n        return (\n          <ul className={styles.list}>\n            {data.repository.issues.edges.map(({node})=>(\n              <li key={node.number}>\n                <PostDate dateString={node.createdAt} className={styles.date}></PostDate> \n                <Link to={`/posts/${node.number}`}>{node.title}</Link>\n              </li>\n            ))}\n          </ul>\n        );\n      }}\n    </Query>;\n  }\n}\n\nexport default PostList;","import React, { Component } from 'react';\nimport { Switch, Route } from \"react-router-dom\";\n\nimport About from './About';\nimport Navbar from './Navbar';\nimport Post from './Post';\nimport PostList from './PostList';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={styles.app}>\n        <Navbar/>\n        <main className={styles.main}>\n          <Switch>\n            <Route exact path=\"/\" component={PostList} />\n            <Route path=\"/posts/:id\" component={Post} />\n            <Route path=\"/about\" component={About} />\n            <Route component={()=>\"Not Found :(\"} />\n          </Switch>\n        </main>\n        <footer className={styles.footer}>\n          <hr/>\n          <small>© 2018 Ken Bi. Powered by <a href=\"https://github.com/bpceee/isblog\" rel=\"noopener noreferrer\" target=\"_blank\">isBlog</a></small>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ApolloClient from \"apollo-boost\";\nimport { BrowserRouter } from 'react-router-dom'\nimport { ApolloProvider } from \"react-apollo\";\n\nimport './index.css';\nimport App from './components/App';\n\nconst client = new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  headers: {\n    authorization: `Bearer ${process.env.REACT_APP_TOKEN}`\n  }\n});\n\nlet basename = '/';\nif (\n  process.env.NODE_ENV === 'production' \n  && `${process.env.REACT_APP_USERNAME}.github.io` !== process.env.REACT_APP_REPO\n) {\n  basename = process.env.REACT_APP_REPO;\n}\n\nReactDOM.render(\n  <BrowserRouter basename={basename}>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}