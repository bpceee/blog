{"version":3,"sources":["components/PostList.module.css","components/App.module.css","components/DumbPost.module.css","components/PostTags.module.css","components/Navbar.module.css","components/PostTags.js","components/PostDate.js","components/DumbPost.js","utils/index.js","components/About.js","components/Navbar.js","components/Post.js","components/PostList.js","components/App.js","index.js"],"names":["module","exports","header","list","postTitleLink","date","app","main","footer","meta","tag","navbar","PostTags","_ref","tags","filter","_ref2","node","name","map","_ref3","idx","react_default","a","createElement","Fragment","key","Link","className","styles","to","concat","PostDate","dateString","elemProps","Object","objectWithoutProperties","splits","Date","toString","substring","split","unshift","splice","transformedDataString","join","DumbPost","loadUtterance","document","querySelector","script","src","setAttribute","process","_this","props","post","number","async","appendChild","utteranceScript","setBodyRef","ele","lastEle","getLastElement","lastElementChild","observer","IntersectionObserver","entries","intersectionRatio","unobserve","threshold","observe","title","this","remove","utterances","markup","createdAt","components_PostDate","labels","edges","length","components_PostTags","ref","dangerouslySetInnerHTML","bodyHTML","__html","React","Component","About","react_apollo_browser_umd","query","gql","_templateObject","loading","error","data","repository","issues","components_DumbPost","Navbar","NavLink","exact","Post","match","Post_templateObject","params","id","issue","PostList","PostList_templateObject","App","components_Navbar","Switch","Route","path","component","href","rel","target","client","ApolloClient","uri","headers","authorization","ReactDOM","render","BrowserRouter","basename","components_App","getElementById"],"mappings":"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","file":"static/js/main.87091b0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"PostList_header__1P85m\",\"list\":\"PostList_list__SeGo8\",\"postTitleLink\":\"PostList_postTitleLink__1t_I6\",\"date\":\"PostList_date__STrt0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2_Wif\",\"main\":\"App_main__2W2Jk\",\"footer\":\"App_footer__2PXAv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meta\":\"DumbPost_meta__2vzUM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"PostTags_tag__vBZmb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1fwtz\"};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./PostTags.module.css\";\n\nconst PostTags = ({tags}) => \n  tags\n  .filter(({node: tag}) => tag.name !== \"post\")\n  .map(({node: tag}, idx) => (\n    <React.Fragment key={idx}>\n      {\" \"}\n      <Link className={styles.tag} to={`/posts/tags/${tag.name}`}>{tag.name}</Link>\n    </React.Fragment>\n  ));\n\n  export default PostTags;","import React from 'react';\n\nconst PostDate = ({dateString, ...elemProps}) => {\n  const splits = new Date(dateString).toString().substring(4, 15).split(' ');\n  splits.unshift(splits.splice(1, 1))\n  const transformedDataString = splits.join(' ');\n  return <span {...elemProps}>{transformedDataString}</span>\n}\n\n  export default PostDate;","import React from 'react';\nimport 'github-markdown-css/github-markdown.css'\nimport { createMarkup, getLastElement } from '../utils';\nimport styles from './DumbPost.module.css';\nimport PostTags from \"./PostTags\";\nimport PostDate from \"./PostDate\";\n\n\nclass DumbPost extends React.Component {\n\n  componentDidMount () {\n    document.title = this.props.post.title;\n  }  \n\n  componentWillUnmount() {\n    if (this.utteranceScript) {\n      this.utteranceScript.remove();\n      const utterances = document.querySelector(\".utterances\");\n      utterances && utterances.remove();\n    }\n  }\n\n  loadUtterance = () => {\n    const main = document.querySelector(\"main\");\n    const script = document.createElement(\"script\");\n    script.src = \"https://utteranc.es/client.js\";\n    script.setAttribute('repo', `${process.env.REACT_APP_USERNAME}/${process.env.REACT_APP_REPO}`);\n    script.setAttribute('issue-number', this.props.post.number);\n    script.async = true;\n    main.appendChild(script);\n    this.utteranceScript = script;\n  };\n\n  setBodyRef = ele => {\n    if (!ele) {\n      return;\n    }\n    const lastEle = getLastElement(ele);\n    const observer = new IntersectionObserver((entries) => {\n      if (entries[0].intersectionRatio <= 0) {\n        return;\n      }\n      this.loadUtterance();\n      observer.unobserve(lastEle);\n    }, {threshold: 1});\n    observer.observe(lastEle);\n  };\n\n  render() {\n    const {post} = this.props;\n    return (\n      <article>\n        {post.createdAt && // don't show header for \"About\" page\n          <header>\n            <h1>{post.title}</h1>  \n             <p className={styles.meta}>\n              Published <PostDate dateString={post.createdAt}/>\n              {post.labels && post.labels.edges.length > 1 &&\n                <React.Fragment>\n                  {\" \"}Â· tagged with\n                  <PostTags tags={post.labels.edges} />\n                </React.Fragment>\n              }\n            </p>\n          </header>\n        }\n        <div className=\"markdown-body\" ref={this.setBodyRef} dangerouslySetInnerHTML={createMarkup(post.bodyHTML)}></div> \n      </article>\n    );\n  }\n}\n\nexport default DumbPost;","export function createMarkup(markup) {\n  return {__html: markup};\n}\n\nexport function getLastElement(ele) {\n  if (!ele || !ele.lastElementChild) return ele;\n  return getLastElement(ele.lastElementChild);\n}\n","import React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport DumbPost from './DumbPost';\n\nconst About = () => (\n  <Query\n    query={gql`\n      query {\n        repository(owner:\"${process.env.REACT_APP_USERNAME}\", name:\"${process.env.REACT_APP_REPO}\") {\n          issues(last:1, labels:\"about\") {\n            edges {\n              node {\n                title\n                number\n                bodyHTML\n              }\n            }\n          }\n        }\n      }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <span>Loading...</span>;\n      if (error) return <span>Error :(</span>;\n\n      const post = data.repository.issues.edges[0].node || {bodyHTML: `<div>Nothing here!<div>`};\n      return <DumbPost post={post}/>\n    }}\n  </Query>\n)\n\nexport default About;","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport styles from './Navbar.module.css';\n\nconst Navbar = () => (\n  <nav className={styles.navbar}>\n    <NavLink exact to={'/'}> Home </NavLink>\n    <NavLink to={'/about'}> About </NavLink>\n  </nav>  \n)\n\nexport default Navbar;","\nimport React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport DumbPost from './DumbPost';\n\nconst Post = ({ match }) => (\n  <Query\n    query={gql`\n      query {\n        repository(owner:\"${process.env.REACT_APP_USERNAME}\", name:\"${process.env.REACT_APP_REPO}\") {\n          issue(number:${match.params.id}) {\n            number\n            title\n            bodyHTML\n            createdAt\n            labels(first: 10) {\n              edges {\n                node { \n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <span>Loading...</span>;\n      if (error) return <span>Not Found :(</span>;\n      return <DumbPost post={data.repository.issue}/>\n    }}\n  </Query>\n)\n\nexport default Post;","\nimport React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"./PostList.module.css\";\nimport PostTags from \"./PostTags\";\nimport PostDate from \"./PostDate\";\n\nclass PostList extends React.Component {\n  \n  componentDidMount () {\n    document.title = process.env.REACT_APP_TITLE;\n  }\n\n  render () {\n    // TODO: add pagination\n    const tag = this.props.match.params.tag || \"post\";\n    return <Query\n      query={gql`\n        query {\n          repository(owner:\"${process.env.REACT_APP_USERNAME}\", name:\"${process.env.REACT_APP_REPO}\") {\n            issues(last:100, labels:\"${tag}\", orderBy: {field: CREATED_AT, direction: DESC}) {\n              edges {\n                node {\n                  title\n                  number\n                  createdAt\n                  labels(first: 10) {\n                    edges {\n                      node { \n                        name\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n    >\n      {({ loading, error, data }) => {\n        if (loading) return <span>Loading...</span>;\n        if (error) return <span>Error :(</span>;\n\n        const {tag} = this.props.match.params;\n        \n        return (\n          <React.Fragment>\n            { tag &&\n              <h1 className={styles.header}>Blog posts tagged \"{tag}\"</h1>\n            }\n            <ul className={styles.list}>\n              {data.repository.issues.edges.map(({node: post}) => (\n                <li key={post.number}>\n                  <PostDate dateString={post.createdAt} className={styles.date}></PostDate>\n                  <Link className={styles.postTitleLink} to={`/posts/${post.number}`}>{post.title}</Link>\n                  <PostTags tags={post.labels.edges} />\n                </li>\n              ))}\n            </ul>\n          </React.Fragment>\n        );\n      }}\n    </Query>;\n  }\n}\n\nexport default PostList;","import React, { Component } from 'react';\nimport { Switch, Route } from \"react-router-dom\";\n\nimport About from './About';\nimport Navbar from './Navbar';\nimport Post from './Post';\nimport PostList from './PostList';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={styles.app}>\n        <Navbar/>\n        <main className={styles.main}>\n          <Switch>\n            <Route exact path=\"/\" component={PostList} />\n            <Route path=\"/posts/tags/:tag\" component={PostList} />\n            <Route path=\"/posts/:id\" component={Post} />\n            <Route path=\"/about\" component={About} />\n            <Route component={()=>\"Not Found :(\"} />\n          </Switch>\n        </main>\n        <footer className={styles.footer}>\n          <hr/>\n          <small>Â© 2018 Ken Bi. Powered by <a href=\"https://github.com/bpceee/isblog\" rel=\"noopener noreferrer\" target=\"_blank\">isBlog</a></small>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ApolloClient from \"apollo-boost\";\nimport { BrowserRouter } from 'react-router-dom'\nimport { ApolloProvider } from \"react-apollo\";\n\nimport './index.css';\nimport App from './components/App';\n\nconst client = new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  headers: {\n    authorization: `Bearer ${process.env.REACT_APP_TOKEN}`\n  }\n});\n\nlet basename = '/';\nif (\n  process.env.NODE_ENV === 'production' \n  && `${process.env.REACT_APP_USERNAME}.github.io` !== process.env.REACT_APP_REPO\n) {\n  basename = process.env.REACT_APP_REPO;\n}\n\nReactDOM.render(\n  <BrowserRouter basename={basename}>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}