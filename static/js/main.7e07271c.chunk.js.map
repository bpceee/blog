{"version":3,"sources":["components/App.module.css","components/PostList.module.css","components/Navbar.module.css","components/About.js","components/Navbar.js","components/Post.js","components/PostList.js","components/App.js","index.js"],"names":["module","exports","app","main","footer","list","date","navbar","About","react_default","a","createElement","Navbar","className","styles","NavLink","exact","to","DumbPost","post","this","props","document","querySelector","script","src","setAttribute","concat","process","number","async","appendChild","remove","markup","Fragment","title","dangerouslySetInnerHTML","bodyHTML","__html","React","Component","Post","_ref","match","react_apollo_browser_umd","query","gql","_templateObject","params","id","_ref2","loading","error","data","Post_DumbPost","repository","issue","PostDate","dateString","elemProps","Object","objectWithoutProperties","splits","Date","toString","substring","split","unshift","splice","transformedDataString","join","PostList","PostList_templateObject","issues","edges","map","_ref3","node","key","PostList_PostDate","createdAt","Link","App","components_Navbar","Switch","Route","path","component","href","rel","target","client","ApolloClient","uri","headers","authorization","console","log","ReactDOM","render","BrowserRouter","basename","components_App","getElementById"],"mappings":"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","file":"static/js/main.7e07271c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2_Wif\",\"main\":\"App_main__2W2Jk\",\"footer\":\"App_footer__2PXAv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PostList_list__SeGo8\",\"date\":\"PostList_date__STrt0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1fwtz\"};","import React from 'react';\n\nconst About = () => (\n  <div>Nothing here!</div>\n)\n\nexport default About;","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport styles from './Navbar.module.css';\n\nconst Navbar = () => (\n  <nav className={styles.navbar}>\n    <NavLink exact to={'/'}> Home </NavLink>\n    <NavLink to={'/about'}> About </NavLink>\n  </nav>  \n)\n\nexport default Navbar;","\nimport React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport 'github-markdown-css/github-markdown.css'\n\nclass DumbPost extends React.Component {\n\n  componentDidMount () {\n    const {post} = this.props;\n    const main = document.querySelector(\"main\");\n    const script = document.createElement(\"script\");\n    script.src = \"https://utteranc.es/client.js\";\n    script.setAttribute('repo', `${process.env.REACT_APP_USERNAME}/${process.env.REACT_APP_REPO}`);\n    script.setAttribute('issue-number', post.number);\n    script.async = true;\n    main.appendChild(script);\n  }  \n\n  componentWillUnmount() {\n    const utterances = document.querySelector(\".utterances\");\n    utterances.remove();\n  }\n\n  render() {\n    const {post} = this.props;\n    return (\n      <React.Fragment>\n        <section>\n          <h1>{post.title}</h1>  \n        </section>\n        <article className=\"markdown-body\">\n          <div dangerouslySetInnerHTML={createMarkup(post.bodyHTML)}></div> \n        </article>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction createMarkup(markup) {\n  return {__html: markup};\n}\n\nconst Post = ({ match }) => (\n  <Query\n    query={gql`\n      query {\n        repository(owner:\"${process.env.REACT_APP_USERNAME}\", name:\"${process.env.REACT_APP_REPO}\") {\n          issue(number:${match.params.id}) {\n            number\n            title\n            bodyHTML\n            createdAt\n          }\n        }\n      }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <span>Loading...</span>;\n      if (error) return <span>Not Found :(</span>;\n      return <DumbPost post={data.repository.issue}/>\n    }}\n  </Query>\n)\n\nexport default Post;","\nimport React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"./PostList.module.css\";\n\nconst PostDate = ({dateString, ...elemProps}) => {\n  const splits = new Date(dateString).toString().substring(4, 15).split(' ');\n  splits.unshift(splits.splice(1, 1))\n  const transformedDataString = splits.join(' ');\n  return <span {...elemProps}>{transformedDataString}</span>\n}\n\nconst PostList = () => (\n  // TODO: add pagination\n  <Query\n    query={gql`\n      query {\n        repository(owner:\"${process.env.REACT_APP_USERNAME}\", name:\"${process.env.REACT_APP_REPO}\") {\n          issues(last:100, orderBy: {field: CREATED_AT, direction: DESC}) {\n            edges {\n              node {\n                title\n                number\n                createdAt\n              }\n            }\n          }\n        }\n      }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <span>Loading...</span>;\n      if (error) return <span>Error :(</span>;\n\n      return (\n        <ul className={styles.list}>\n          {data.repository.issues.edges.map(({node})=>(\n            <li key={node.number}>\n              <PostDate dateString={node.createdAt} className={styles.date}></PostDate> \n              <Link to={`/posts/${node.number}`}>{node.title}</Link>\n            </li>\n          ))}\n        </ul>\n      );\n    }}\n  </Query>\n);\n\nexport default PostList;","import React, { Component } from 'react';\nimport { Switch, Route } from \"react-router-dom\";\n\nimport About from './About';\nimport Navbar from './Navbar';\nimport Post from './Post';\nimport PostList from './PostList';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={styles.app}>\n        <Navbar/>\n        <main className={styles.main}>\n          <Switch>\n            <Route exact path=\"/\" component={PostList} />\n            <Route path=\"/posts/:id\" component={Post} />\n            <Route path=\"/about\" component={About} />\n            <Route component={()=>\"Not Found :(\"} />\n          </Switch>\n        </main>\n        <footer className={styles.footer}>\n          <hr/>\n          <small> Â© 2018 Ken Bi. Powered by <a href=\"https://github.com/bpceee/blog\" rel=\"noopener noreferrer\" target=\"_blank\">Me</a> using the <a href=\"https://github.com/arjunkrishnababu96/basics\" rel=\"noopener noreferrer\" target=\"_blank\">Basics</a> theme. </small>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ApolloClient from \"apollo-boost\";\nimport { BrowserRouter } from 'react-router-dom'\nimport { ApolloProvider } from \"react-apollo\";\n\nimport './index.css';\nimport App from './components/App';\n\nconst client = new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  headers: {\n    authorization: \"Bearer b15309623a40d4118d6d29c9dbbff8d9d900018f\"\n  }\n});\n\nlet basename = '/';\nif (\n  process.env.NODE_ENV === 'production' \n  && `${process.env.REACT_APP_USERNAME}.github.io` !== process.env.REACT_APP_REPO\n) {\n  basename = process.env.REACT_APP_REPO;\n}\n\nconsole.log(process.env);\n\nReactDOM.render(\n  <BrowserRouter basename={basename}>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}