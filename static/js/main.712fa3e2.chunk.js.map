{"version":3,"sources":["components/PostList.module.css","components/App.module.css","components/DumbPost.module.css","components/PostTags.module.css","components/Navbar.module.css","components/PostTags.js","components/PostDate.js","components/DumbPost.js","utils/index.js","components/About.js","components/Navbar.js","components/Post.js","components/PostList.js","components/App.js","index.js"],"names":["module","exports","header","list","postTitleLink","date","app","main","footer","meta","tag","navbar","PostTags","_ref","tags","filter","_ref2","node","name","map","_ref3","idx","react_default","a","createElement","Fragment","key","Link","className","styles","to","concat","PostDate","dateString","elemProps","Object","objectWithoutProperties","splits","Date","toString","substring","split","unshift","splice","transformedDataString","join","DumbPost","setBodyRef","ele","window","lastEle","getLastElement","lastElementChild","observer","IntersectionObserver","entries","intersectionRatio","_this","loadUtterance","unobserve","threshold","observe","document","title","this","props","post","utteranceScript","remove","utterances","querySelector","script","src","setAttribute","process","number","async","appendChild","markup","createdAt","components_PostDate","labels","edges","length","components_PostTags","ref","dangerouslySetInnerHTML","bodyHTML","__html","React","Component","About","react_apollo_browser_umd","query","gql","_templateObject","loading","error","data","repository","issues","components_DumbPost","Navbar","NavLink","exact","Post","match","Post_templateObject","params","id","issue","PostList","PostList_templateObject","App","components_Navbar","Switch","Route","path","component","href","rel","target","client","ApolloClient","uri","headers","authorization","ReactDOM","render","BrowserRouter","basename","components_App","getElementById"],"mappings":"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","file":"static/js/main.712fa3e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"PostList_header__LXSMx\",\"list\":\"PostList_list__3T5yt\",\"postTitleLink\":\"PostList_postTitleLink__1ZVaj\",\"date\":\"PostList_date__1dAr5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1mW4O\",\"main\":\"App_main__1rqMa\",\"footer\":\"App_footer__1osVG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meta\":\"DumbPost_meta__2ihfS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"PostTags_tag__1pEhm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1LRWh\"};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./PostTags.module.css\";\n\nconst PostTags = ({tags}) => \n  tags\n  .filter(({node: tag}) => tag.name !== \"post\")\n  .map(({node: tag}, idx) => (\n    <React.Fragment key={idx}>\n      {\" \"}\n      <Link className={styles.tag} to={`/posts/tags/${tag.name}`}>{tag.name}</Link>\n    </React.Fragment>\n  ));\n\n  export default PostTags;","import React from 'react';\n\nconst PostDate = ({dateString, ...elemProps}) => {\n  const splits = new Date(dateString).toString().substring(4, 15).split(' ');\n  splits.unshift(splits.splice(1, 1))\n  const transformedDataString = splits.join(' ');\n  return <span {...elemProps}>{transformedDataString}</span>\n}\n\n  export default PostDate;","import React from 'react';\nimport 'github-markdown-css/github-markdown.css'\nimport { createMarkup, getLastElement } from '../utils';\nimport styles from './DumbPost.module.css';\nimport PostTags from \"./PostTags\";\nimport PostDate from \"./PostDate\";\n\n\nclass DumbPost extends React.Component {\n\n  componentDidMount () {\n    document.title = this.props.post.title;\n  }  \n\n  componentWillUnmount() {\n    if (this.utteranceScript) {\n      this.utteranceScript.remove();\n      const utterances = document.querySelector(\".utterances\");\n      utterances && utterances.remove();\n    }\n  }\n\n  loadUtterance() {\n    const main = document.querySelector(\"main\");\n    const script = document.createElement(\"script\");\n    script.src = \"https://utteranc.es/client.js\";\n    script.setAttribute('repo', `${process.env.REACT_APP_USERNAME}/${process.env.REACT_APP_REPO}`);\n    script.setAttribute('issue-number', this.props.post.number);\n    script.async = true;\n    main.appendChild(script);\n    this.utteranceScript = script;\n  };\n\n  setBodyRef = ele => {\n    if (!ele) {\n      return;\n    }\n    if (window[\"IntersectionObserver\"]) {\n      const lastEle = getLastElement(ele);\n      const observer = new IntersectionObserver((entries) => {\n        if (entries[0].intersectionRatio <= 0) {\n          return;\n        }\n        this.loadUtterance();\n        observer.unobserve(lastEle);\n      }, {threshold: 1});\n      observer.observe(lastEle);\n    } else {\n      this.loadUtterance();\n    }\n  };\n\n  render() {\n    const {post} = this.props;\n    return (\n      <article>\n        {post.createdAt && // don't show header for \"About\" page\n          <header>\n            <h1>{post.title}</h1>  \n             <p className={styles.meta}>\n              Published <PostDate dateString={post.createdAt}/>\n              {post.labels && post.labels.edges.length > 1 &&\n                <React.Fragment>\n                  {\" \"}· tagged with\n                  <PostTags tags={post.labels.edges} />\n                </React.Fragment>\n              }\n            </p>\n          </header>\n        }\n        <div className=\"markdown-body\" ref={this.setBodyRef} dangerouslySetInnerHTML={createMarkup(post.bodyHTML)}></div> \n      </article>\n    );\n  }\n}\n\nexport default DumbPost;","export function createMarkup(markup) {\n  return {__html: markup};\n}\n\nexport function getLastElement(ele) {\n  if (!ele || !ele.lastElementChild) return ele;\n  return getLastElement(ele.lastElementChild);\n}\n","import React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport DumbPost from './DumbPost';\n\nconst About = () => (\n  <Query\n    query={gql`\n      query {\n        repository(owner:\"${process.env.REACT_APP_USERNAME}\", name:\"${process.env.REACT_APP_REPO}\") {\n          issues(last:1, labels:\"about\") {\n            edges {\n              node {\n                title\n                number\n                bodyHTML\n              }\n            }\n          }\n        }\n      }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <span>Loading...</span>;\n      if (error) return <span>Error :(</span>;\n\n      const post = data.repository.issues.edges[0].node || {bodyHTML: `<div>Nothing here!<div>`};\n      return <DumbPost post={post}/>\n    }}\n  </Query>\n)\n\nexport default About;","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport styles from './Navbar.module.css';\n\nconst Navbar = () => (\n  <nav className={styles.navbar}>\n    <NavLink exact to={'/'}> Home </NavLink>\n    <NavLink to={'/about'}> About </NavLink>\n  </nav>  \n)\n\nexport default Navbar;","\nimport React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport DumbPost from './DumbPost';\n\nconst Post = ({ match }) => (\n  <Query\n    query={gql`\n      query {\n        repository(owner:\"${process.env.REACT_APP_USERNAME}\", name:\"${process.env.REACT_APP_REPO}\") {\n          issue(number:${match.params.id}) {\n            number\n            title\n            bodyHTML\n            createdAt\n            labels(first: 10) {\n              edges {\n                node { \n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <span>Loading...</span>;\n      if (error) return <span>Not Found :(</span>;\n      return <DumbPost post={data.repository.issue}/>\n    }}\n  </Query>\n)\n\nexport default Post;","\nimport React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"./PostList.module.css\";\nimport PostTags from \"./PostTags\";\nimport PostDate from \"./PostDate\";\n\nclass PostList extends React.Component {\n  \n  componentDidMount () {\n    document.title = process.env.REACT_APP_TITLE;\n  }\n\n  render () {\n    // TODO: add pagination\n    const tag = this.props.match.params.tag || \"post\";\n    return <Query\n      query={gql`\n        query {\n          repository(owner:\"${process.env.REACT_APP_USERNAME}\", name:\"${process.env.REACT_APP_REPO}\") {\n            issues(last:100, labels:\"${tag}\", orderBy: {field: CREATED_AT, direction: DESC}) {\n              edges {\n                node {\n                  title\n                  number\n                  createdAt\n                  labels(first: 10) {\n                    edges {\n                      node { \n                        name\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n    >\n      {({ loading, error, data }) => {\n        if (loading) return <span>Loading...</span>;\n        if (error) return <span>Error :(</span>;\n\n        const {tag} = this.props.match.params;\n        \n        return (\n          <React.Fragment>\n            { tag &&\n              <h1 className={styles.header}>Blog posts tagged \"{tag}\"</h1>\n            }\n            <ul className={styles.list}>\n              {data.repository.issues.edges.map(({node: post}) => (\n                <li key={post.number}>\n                  <PostDate dateString={post.createdAt} className={styles.date}></PostDate>\n                  <Link className={styles.postTitleLink} to={`/posts/${post.number}`}>{post.title}</Link>\n                  <PostTags tags={post.labels.edges} />\n                </li>\n              ))}\n            </ul>\n          </React.Fragment>\n        );\n      }}\n    </Query>;\n  }\n}\n\nexport default PostList;","import React, { Component } from 'react';\nimport { Switch, Route } from \"react-router-dom\";\n\nimport About from './About';\nimport Navbar from './Navbar';\nimport Post from './Post';\nimport PostList from './PostList';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={styles.app}>\n        <Navbar/>\n        <main className={styles.main}>\n          <Switch>\n            <Route exact path=\"/\" component={PostList} />\n            <Route path=\"/posts/tags/:tag\" component={PostList} />\n            <Route path=\"/posts/:id\" component={Post} />\n            <Route path=\"/about\" component={About} />\n            <Route component={()=>\"Not Found :(\"} />\n          </Switch>\n        </main>\n        <footer className={styles.footer}>\n          <hr/>\n          <small>© 2018 Ken Bi. Powered by <a href=\"https://github.com/bpceee/isblog\" rel=\"noopener noreferrer\" target=\"_blank\">isBlog</a></small>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ApolloClient from \"apollo-boost\";\nimport { BrowserRouter } from 'react-router-dom'\nimport { ApolloProvider } from \"react-apollo\";\n\nimport './index.css';\nimport App from './components/App';\n\nconst client = new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  headers: {\n    authorization: `Bearer ${process.env.REACT_APP_TOKEN}`\n  }\n});\n\nlet basename = '/';\nif (\n  process.env.NODE_ENV === 'production' \n  && `${process.env.REACT_APP_USERNAME}.github.io` !== process.env.REACT_APP_REPO\n) {\n  basename = process.env.REACT_APP_REPO;\n}\n\nReactDOM.render(\n  <BrowserRouter basename={basename}>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}