{"version":3,"sources":["components/App.module.css","components/PostList.module.css","components/Navbar.module.css","components/About.js","components/Navbar.js","components/Post.js","components/PostList.js","components/App.js","index.js"],"names":["module","exports","app","main","footer","list","date","navbar","About","document","title","react_default","a","createElement","React","Component","Navbar","className","styles","NavLink","exact","to","DumbPost","post","this","props","querySelector","script","src","setAttribute","concat","process","number","async","appendChild","utterances","remove","markup","Fragment","dangerouslySetInnerHTML","bodyHTML","__html","Post","_ref","match","react_apollo_browser_umd","query","gql","_templateObject","params","id","_ref2","loading","error","data","Post_DumbPost","repository","issue","PostDate","dateString","elemProps","Object","objectWithoutProperties","splits","Date","toString","substring","split","unshift","splice","transformedDataString","join","PostList","PostList_templateObject","issues","edges","map","_ref3","node","key","PostList_PostDate","createdAt","Link","App","components_Navbar","Switch","Route","path","component","href","rel","target","client","ApolloClient","uri","headers","authorization","ReactDOM","render","BrowserRouter","basename","components_App","getElementById"],"mappings":"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","file":"static/js/main.5e29f6b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2_Wif\",\"main\":\"App_main__2W2Jk\",\"footer\":\"App_footer__2PXAv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PostList_list__SeGo8\",\"date\":\"PostList_date__STrt0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1fwtz\"};","import React from 'react';\n\nclass About extends React.Component {\n  componentDidMount() {\n    document.title = \"About\";\n  }\n\n  render () {\n    return <div>Nothing here!</div>;\n  }\n}\n\nexport default About;","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport styles from './Navbar.module.css';\n\nconst Navbar = () => (\n  <nav className={styles.navbar}>\n    <NavLink exact to={'/'}> Home </NavLink>\n    <NavLink to={'/about'}> About </NavLink>\n  </nav>  \n)\n\nexport default Navbar;","\nimport React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport 'github-markdown-css/github-markdown.css'\n\nclass DumbPost extends React.Component {\n\n  componentDidMount () {\n    const {post} = this.props;\n    document.title = post.title;\n\n    const main = document.querySelector(\"main\");\n    const script = document.createElement(\"script\");\n    script.src = \"https://utteranc.es/client.js\";\n    script.setAttribute('repo', `${process.env.REACT_APP_USERNAME}/${process.env.REACT_APP_REPO}`);\n    script.setAttribute('issue-number', post.number);\n    script.async = true;\n    main.appendChild(script);\n  }  \n\n  componentWillUnmount() {\n    const utterances = document.querySelector(\".utterances\");\n    utterances && utterances.remove();\n  }\n\n  render() {\n    const {post} = this.props;\n    return (\n      <React.Fragment>\n        <section>\n          <h1>{post.title}</h1>  \n        </section>\n        <article className=\"markdown-body\">\n          <div dangerouslySetInnerHTML={createMarkup(post.bodyHTML)}></div> \n        </article>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction createMarkup(markup) {\n  return {__html: markup};\n}\n\nconst Post = ({ match }) => (\n  <Query\n    query={gql`\n      query {\n        repository(owner:\"${process.env.REACT_APP_USERNAME}\", name:\"${process.env.REACT_APP_REPO}\") {\n          issue(number:${match.params.id}) {\n            number\n            title\n            bodyHTML\n            createdAt\n          }\n        }\n      }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <span>Loading...</span>;\n      if (error) return <span>Not Found :(</span>;\n      return <DumbPost post={data.repository.issue}/>\n    }}\n  </Query>\n)\n\nexport default Post;","\nimport React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"./PostList.module.css\";\n\nconst PostDate = ({dateString, ...elemProps}) => {\n  const splits = new Date(dateString).toString().substring(4, 15).split(' ');\n  splits.unshift(splits.splice(1, 1))\n  const transformedDataString = splits.join(' ');\n  return <span {...elemProps}>{transformedDataString}</span>\n}\n\nclass PostList extends React.Component {\n  \n  componentDidMount () {\n    document.title = process.env.REACT_APP_TITLE;\n  }\n\n  render () {\n    // TODO: add pagination\n    return <Query\n      query={gql`\n        query {\n          repository(owner:\"${process.env.REACT_APP_USERNAME}\", name:\"${process.env.REACT_APP_REPO}\") {\n            issues(last:100, orderBy: {field: CREATED_AT, direction: DESC}) {\n              edges {\n                node {\n                  title\n                  number\n                  createdAt\n                }\n              }\n            }\n          }\n        }\n      `}\n    >\n      {({ loading, error, data }) => {\n        if (loading) return <span>Loading...</span>;\n        if (error) return <span>Error :(</span>;\n\n        return (\n          <ul className={styles.list}>\n            {data.repository.issues.edges.map(({node})=>(\n              <li key={node.number}>\n                <PostDate dateString={node.createdAt} className={styles.date}></PostDate> \n                <Link to={`/posts/${node.number}`}>{node.title}</Link>\n              </li>\n            ))}\n          </ul>\n        );\n      }}\n    </Query>;\n  }\n}\n\nexport default PostList;","import React, { Component } from 'react';\nimport { Switch, Route } from \"react-router-dom\";\n\nimport About from './About';\nimport Navbar from './Navbar';\nimport Post from './Post';\nimport PostList from './PostList';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={styles.app}>\n        <Navbar/>\n        <main className={styles.main}>\n          <Switch>\n            <Route exact path=\"/\" component={PostList} />\n            <Route path=\"/posts/:id\" component={Post} />\n            <Route path=\"/about\" component={About} />\n            <Route component={()=>\"Not Found :(\"} />\n          </Switch>\n        </main>\n        <footer className={styles.footer}>\n          <hr/>\n          <small> Â© 2018 Ken Bi. Powered by <a href=\"https://github.com/bpceee/isblog\" rel=\"noopener noreferrer\" target=\"_blank\">isBlog</a> using the <a href=\"https://github.com/arjunkrishnababu96/basics\" rel=\"noopener noreferrer\" target=\"_blank\">Basics</a> theme. </small>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ApolloClient from \"apollo-boost\";\nimport { BrowserRouter } from 'react-router-dom'\nimport { ApolloProvider } from \"react-apollo\";\n\nimport './index.css';\nimport App from './components/App';\n\nconst client = new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  headers: {\n    authorization: `Bearer ${process.env.REACT_APP_TOKEN}`\n  }\n});\n\nlet basename = '/';\nif (\n  process.env.NODE_ENV === 'production' \n  && `${process.env.REACT_APP_USERNAME}.github.io` !== process.env.REACT_APP_REPO\n) {\n  basename = process.env.REACT_APP_REPO;\n}\n\nReactDOM.render(\n  <BrowserRouter basename={basename}>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}