{"data":{"github":{"repository":{"issue":{"number":2,"title":"Change Stash's default avatar to username initials","bodyHTML":"<p>If you are using Atlassian's Stash at work, you must be annoyed by so many co-workers using the default avatar, which makes it so different to recognize different users. And you just couldn't ask them all to upload an avatar!</p>\n<p>So here I write a small <a href=\"https://tampermonkey.net/\" rel=\"nofollow\">tampermonkey</a> script to change the default avatar to their name initials.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-c1\">styleEl</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">createElement</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>style<span class=\"pl-pds\">'</span></span>);\n<span class=\"pl-c1\">document</span>.<span class=\"pl-smi\">head</span>.<span class=\"pl-c1\">appendChild</span>(styleEl);\n<span class=\"pl-smi\">styleEl</span>.<span class=\"pl-smi\">sheet</span>.<span class=\"pl-en\">insertRule</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>.aui-avatar-inner { background-color: lightgray; color: white; font-weight: 700; line-height: 32px; }<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">0</span>);\n<span class=\"pl-smi\">styleEl</span>.<span class=\"pl-smi\">sheet</span>.<span class=\"pl-en\">insertRule</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>.aui-avatar-small .aui-avatar-inner { line-height: 24px; }<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">0</span>);\n\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">observer</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">MutationObserver</span>(<span class=\"pl-k\">function</span>(<span class=\"pl-smi\">mutations</span>) {\n    <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">querySelectorAll</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>img[src^=\"https://secure.gravatar.com\"]<span class=\"pl-pds\">'</span></span>).<span class=\"pl-c1\">forEach</span>((<span class=\"pl-smi\">img</span>) <span class=\"pl-k\">=&gt;</span> {\n        <span class=\"pl-k\">const</span> <span class=\"pl-c1\">parent</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">img</span>.<span class=\"pl-smi\">parentElement</span>;\n        <span class=\"pl-k\">const</span> <span class=\"pl-c1\">initials</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">img</span>.<span class=\"pl-c1\">alt</span>.<span class=\"pl-c1\">split</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span> <span class=\"pl-pds\">'</span></span>).<span class=\"pl-en\">map</span>(<span class=\"pl-smi\">s</span><span class=\"pl-k\">=&gt;</span>s[<span class=\"pl-c1\">0</span>]).<span class=\"pl-c1\">join</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-pds\">'</span></span>);\n        <span class=\"pl-smi\">parent</span>.<span class=\"pl-smi\">textContent</span> <span class=\"pl-k\">=</span> initials;\n    })\n})\n<span class=\"pl-smi\">observer</span>.<span class=\"pl-c1\">observe</span>(<span class=\"pl-c1\">document</span>, { childList<span class=\"pl-k\">:</span> <span class=\"pl-c1\">true</span>, subtree<span class=\"pl-k\">:</span> <span class=\"pl-c1\">true</span> });</pre></div>\n<p>Before:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/4188573/48832106-5ffac900-edb3-11e8-965f-b8236c82f504.png\"><img src=\"https://user-images.githubusercontent.com/4188573/48832106-5ffac900-edb3-11e8-965f-b8236c82f504.png\" alt=\"image\" style=\"max-width:100%;\"></a><br>\nAfter:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/4188573/48832143-7012a880-edb3-11e8-9c59-1b13a7b54bc2.png\"><img src=\"https://user-images.githubusercontent.com/4188573/48832143-7012a880-edb3-11e8-9c59-1b13a7b54bc2.png\" alt=\"image\" style=\"max-width:100%;\"></a></p>\n<p>Surely it would be much better if we could just use css without javascript. However,  <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:has\" rel=\"nofollow\"><code>:has()</code></a> pseudo-class is still can not be used within stylesheets but only with functions like document.querySelector().</p>\n<p>And the <code>MutationObserver</code> used here is much faster than the conventional <code>DOMNodeInserted</code> event. Just a reminder, in real life, a proper debounce to the callback is much appropriate here!</p>\n<hr>\n<p>Update:</p>\n<p>Just saw a brilliant way to detect DOM Node Insertion without using MutationObserver: <a href=\"https://davidwalsh.name/detect-node-insertion\" rel=\"nofollow\">Detect DOM Node Insertions with JavaScript and CSS Animations</a>. So I updated the script as this:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">let</span> <span class=\"pl-en\">insertionObserver</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">function</span>(<span class=\"pl-smi\">selector</span>, <span class=\"pl-smi\">callback</span>) {\n  <span class=\"pl-k\">const</span> <span class=\"pl-c1\">styleEl</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">createElement</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>style<span class=\"pl-pds\">'</span></span>);\n  <span class=\"pl-c1\">document</span>.<span class=\"pl-smi\">head</span>.<span class=\"pl-c1\">appendChild</span>(styleEl);\n  <span class=\"pl-k\">const</span> <span class=\"pl-c1\">KeyframeName</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>insertionObserver<span class=\"pl-pds\">'</span></span>;\n  <span class=\"pl-k\">const</span> <span class=\"pl-c1\">keyframesRule</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">`</span>@keyframes <span class=\"pl-s1\"><span class=\"pl-pse\">${</span>KeyframeName<span class=\"pl-pse\">}</span></span> { from { opacity: 0.99; } to { opacity: 1; } }<span class=\"pl-pds\">`</span></span>;\n  <span class=\"pl-k\">const</span> <span class=\"pl-c1\">styleRule</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">`</span><span class=\"pl-s1\"><span class=\"pl-pse\">${</span>selector<span class=\"pl-pse\">}</span></span> { animation-duration: 0.001s; animation-name: <span class=\"pl-s1\"><span class=\"pl-pse\">${</span>KeyframeName<span class=\"pl-pse\">}</span></span>; }<span class=\"pl-pds\">`</span></span>;\n\n  <span class=\"pl-smi\">styleEl</span>.<span class=\"pl-smi\">sheet</span>.<span class=\"pl-en\">insertRule</span>(keyframesRule);\n  <span class=\"pl-smi\">styleEl</span>.<span class=\"pl-smi\">sheet</span>.<span class=\"pl-en\">insertRule</span>(styleRule);\n\n  <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">addEventListener</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>animationstart<span class=\"pl-pds\">'</span></span>, (<span class=\"pl-c1\">event</span>) <span class=\"pl-k\">=&gt;</span> {\n    <span class=\"pl-k\">if</span> (<span class=\"pl-c1\">event</span>.<span class=\"pl-smi\">animationName</span> <span class=\"pl-k\">===</span> KeyframeName) {\n      <span class=\"pl-en\">callback</span>(<span class=\"pl-c1\">event</span>);\n    }\n  }, <span class=\"pl-c1\">false</span>);\n}\n\n<span class=\"pl-en\">insertionObserver</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>.aui-avatar-inner img[src^=\"https://secure.gravatar.com\"]<span class=\"pl-pds\">'</span></span>, (<span class=\"pl-c1\">event</span>) <span class=\"pl-k\">=&gt;</span> {\n  <span class=\"pl-k\">let</span> img <span class=\"pl-k\">=</span> <span class=\"pl-c1\">event</span>.<span class=\"pl-c1\">target</span>;\n  <span class=\"pl-k\">const</span> <span class=\"pl-c1\">parent</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">img</span>.<span class=\"pl-smi\">parentElement</span>;\n  <span class=\"pl-k\">const</span> <span class=\"pl-c1\">initials</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">img</span>.<span class=\"pl-c1\">alt</span>.<span class=\"pl-c1\">split</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span> <span class=\"pl-pds\">'</span></span>).<span class=\"pl-en\">map</span>(<span class=\"pl-smi\">s</span><span class=\"pl-k\">=&gt;</span>s[<span class=\"pl-c1\">0</span>]).<span class=\"pl-c1\">join</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-pds\">'</span></span>);\n  <span class=\"pl-k\">const</span> <span class=\"pl-c1\">height</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getComputedStyle</span>(parent).<span class=\"pl-c1\">height</span>;\n  <span class=\"pl-smi\">parent</span>.<span class=\"pl-c1\">setAttribute</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>style<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">`</span>background-color: lightgray; color: white; line-height: <span class=\"pl-s1\"><span class=\"pl-pse\">${</span>height<span class=\"pl-pse\">}</span></span><span class=\"pl-pds\">`</span></span>);\n  <span class=\"pl-smi\">parent</span>.<span class=\"pl-smi\">textContent</span> <span class=\"pl-k\">=</span> initials;\n});</pre></div>\n<p>Maybe it's time to create a repo to for these little helper functions, as my arsenal..</p>","createdAt":"2018-11-20T13:50:11Z","labels":{"edges":[{"node":{"name":"post"}},{"node":{"name":"tampermonkey"}}]}}}}},"pageContext":{"slug":2}}