{"data":{"github":{"repository":{"issue":{"number":5,"title":"Vanilla :tabbable Selector","bodyHTML":"<p><a href=\"http://youmightnotneedjquery.com/\" rel=\"nofollow\">You might not need jQuery</a> is a good place to find Vanilla JS equivalents of jQuery methods.<br>\nHowever, some jQuery unique selector couldn't be found there. Like <a href=\"https://api.jqueryui.com/tabbable-selector/\" rel=\"nofollow\">:tabbable Selector</a>.</p>\n<blockquote>\n<p>Elements of the following type are tabbable if they do not have a negative tab index and are not disabled: input, select, textarea, button, and object. Anchors are focusable if they have an href or positive tabindex attribute. area elements are focusable if they are inside a named map, have an href attribute, and there is a visible image using the map. All other elements are tabbable based solely on their tabindex attribute and visibility.</p>\n</blockquote>\n<p>Based the quoted document above, we can write an implementation like this:</p>\n<pre><code>Array.from(\n  document.querySelectorAll(`\n    input:not([tabindex^=\"-\"]):not([disabled]),\n    select:not([tabindex^=\"-\"]):not([disabled]),\n    textarea:not([tabindex^=\"-\"]):not([disabled]),\n    button:not([tabindex^=\"-\"]):not([disabled]),\n    a[href]:not([tabindex^=\"-\"]):not([disabled]),\n    [tabindex]:not([tabindex^=\"-\"]):not([disabled])\n  `)\n).filter(ele =&gt; ele.offsetParent !== null)\n</code></pre>\n<p>The filter here is to make sure the selected elements are visible(in the layout). According to <a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\">https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent</a>, offsetParent returns null when the element has style.display set to none. (including children elements)</p>\n<p>Well, this doesn't handle object and map element. The rules for these two element are a little bit tricky, and they are rarely used anyway...<br>\nAlso, I find that contrary to the jQuery's doc, a disabled object element is focusable in Chrome.</p>","createdAt":"2018-11-27T08:54:11Z","labels":{"edges":[{"node":{"name":"css"}},{"node":{"name":"post"}}]}}}}},"pageContext":{"slug":5}}